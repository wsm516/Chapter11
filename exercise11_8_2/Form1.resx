<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAA+
        FQAAAk1TRnQBSQFMAgEBCgEAARgBAAEYAQABEAEAARABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAATADAAEBAQABCAYAAQwYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/wEACf8B9BD/AfYB/wH2
        A/8gAAb/AQcB7wH3AZEB7AHyBf8B9AH/Ae0ErgHtAe8BvAHxAfQB9gL/IAAF/wHyAfABkQEJAZMBuwHt
        AfQE/wH0AfMBtAEJAbUBtAEJAbUBkQKuAe0B8gH2Af8gAAT/AfYBvAG7AUkBcwEsAbwBkQHzBf8B9AGR
        Ad0BtQEZAdYCtQG0ArUBvAL2IAAF/wEJAXIBSQFRAVMBbwGRAfAF/wH0AbUCCQG1AgkBtQEJAbUB7QG8
        Af8B9iAABP8B8wHxAU8BUQFSAZkBJgHvAfcF/wH0AbUB3QG1ARkBtQG0AbUBtAK1AbwC/yAABP8B8wHw
        AZcCeQEJAZMBmQHsBf8B9AG1Ad0BCQG1AQkB3QG1Ad0BCQH3AbwB9AH/IAAE/wHxAZgBAgEwASsBtAFv
        AfcB7AH0A/8C9AG1ARkBkQG1AQkBzwEJAgcB9wG8AfQB/yAABP8B3QGRAWwBWAExAbQBdAElAesB8gT/
        AfQBtQEJAbsBGQEJAd0BtQEcAvcBBwH2Af8gAAT/AbwBtQHPAXoBMQG7AZkBLAFEAbwE/wH0AbUCGQIJ
        AbsB7wEHAu8BBwH2Af8gAAT/AbwBzwGLAXkBUgFtAfABdQFuAe8E/wH0AbsBGQG1AtwD1gEJAbsBBwH2
        Af8gAAP/AfMBCQHPAa4BvAEaAe0B9AHyAbUBbQHzA/8B9AEHARkCtATVAbQBuwHvAfQB/yAAA/8BGgEj
        AUUBEgHyAZoBvAH/AfQBtAGuAfQD/wH0AQcBGQHdAQkB3AHWArQBtQEJAe8B9AH2IAAD/wGZASQBTAFu
        AfQB9gP/AfcB8gX/AfAB8QLyBRkBBwG8Af8B9iAAAf8B9gH/AfYB/wH2Ev8B9AHzAvEB8wP/IAAc/wH2
        A/8gAAH/AhsB8gEbAfEB8gLzAfEBGwLyAfMB8gH/AfYBGQfzAfQB8wH0AfIB9AHzAfYB9AH/AfYBwwP/
        ARsB8QHyAfQC/wL2Af8B9gP/AfYC/wH0AfYH/wEbAXIDSgFJAUoDSQFDARUBQwEiAUMC9AHPAacFhgJm
        AYYEZgH0AfYCGgEbAfQBmgF5A1IBmQHwAfQB8gH0A/8DrgHrAZIBBwHzAv8B9gT/AfMBcgEcAQgB7wGY
        AQcB7wKYARwCmAFyAUkB8QH0Ac8B1QUJAe8BCQK1AQkBzwFmAfQBGwJ6AZoBeQFSBFkBUgF0ARsB8AHy
        Av8B8gG1AcIBCAIJAbUBzwGuAYsBBwT/AfQB7AEHA/8B9AH/AfQB8gHzARsB9AGSARQC9AHPAQkC/wH0
        A/8BCQGuAbQB9AG1AWYBGwH2AXoBUgF0AVIBWQN6AlkBUgHDAfYB8gL/AfMBtQIIAroCuwHBAZ0B7AHx
        AfMC/wHzAewCBwH3AZgC7wGYAXIBSgESAW0BcwFJAfMB9AHPAQkB/wHzAbUB1gGvAc8BtAHPAYYCtQFm
        AfQBGwF6AZoBwwF5AaABegRZAVgBmgH2AfEB9gH/AfIBtQEIAbsBtAWzAbQBtQGRAQcB/wEbAXMBmAHs
        BUkBcgFPAUkBcwF4AUkBGwH0AbQBCQH/AfMCtAG1Ac8C1gHPAbQBtQGGAfQBGwKaARsBeQGgAVkCUgEx
        AlkBmgH/AfEB9gH/AfMBtQEIAboCswG0A7MBtAGzAbQB8wH/AfMB7QEIAcIBmAGXAlABlwFyAkkBmAEc
        AUkB8wH0AdUBCQH2AfQBtQEJAv8BvAG1AQkBGQG1AYYB8wEbApoBwwF5AXoBWAFZAXoBUgJZAZkB/wHy
        Av8B8wG7AQgBugG5BbMCtAG1Av8B9AHtAQgB/wHCAXIBSQF4AXIBUAFJAVABmAEcARMB8wH0AbUB3QH2
        AfQB1gEJAfYC9AIZAf8BtQGGAfQBGgGaAXoB9gGZAXoBNwGaAaACegFYAXkB9gHwAf8B9gHzAbUBuwPb
        AdoBuQKzAbQB2wEHAv8B8wEcAbwB/wHzAZgClwFyAU8BmALzARwBEwHzAfQBtQHdAfQBCQHPAbUBCQH0
        Af8BCQG1Af8BtQGGAfMBGgKaAcMCeQKgAZoB5QFZAlIBdAGZAv8B8wEHAbsC2wG5AdoBuQKzAdsBtAHx
        Av8BGwEcAQgBGwEIAZgBeAJyAVABcgEIAfYBcwFKAfMB/wHWAd0BCQG0Ac8BrQGLAfMB/wEZAd0B/wG1
        AYYB9AHDAZoHegFYAXkBGwH0AhwBwwH/AfMBCQG7AdwB2wK6AdsBuQGzAdsB7QH2Av8B9AGYAggCmAF4
        AZcEcgEIAZgBSgHCAfQB1gHdARkBCQHWAbQBrQH0Af8BBwG1Af8BtQGGAfMBwwGaAnoBwwH2ARsCGgHD
        AfYD/wL0Af8B8wG1AdwBCQHcAboC2wG6AdoB2wG8AfYC/wH0Ae8BCAEHA5gB9AEIAZgBkgHsApgBSgHz
        AfQBtQHdARkB3QEJAdYBzwHzAf8C8wH/AbUBhgHzAcMBmQGaAcMG9gEbAcMBGwHwAfMC/wHzAbUCGQHh
        AbsC3AG7AdsBtAH0A/8B9AHvAfAB9AH/AvYC/wEbAfMC9AGYAeoB8wH0AQkB3QHzARkB3QEJAdYC/wEJ
        AbUB/wEJAYYB8wH/AZoBGgIbAhoBwwIaAZoCGgHDAfYC/wHyAbUB7AEZAXgB3QFzAQkBCAG7AesE/wHz
        AZgBBwEIApgBBwHvAxwC7QFyAVAB8wH0AQkB3QUZAd0ECQG0AYsB9AH/ARsCmgEaARsBwwEaA8MCmgH2
        Af8B9AL/AbUBeQHsAnMBUQHtAXMB7AGZBP8B9AG8AQgBBwEIAQcD7wKYARwBmAIcAvQDCQHWA7UBzwG0
        AeYEzwHzAf8B9gHDBpoBGgKaAZkB9gH/AfYB/wH2Af8B9gH/AfYB/wL2Af8B9gr/AvYC/wL2Av8B9gL/
        AfYH9AH/A/QB8wH/AfQBwwT/ARsCwwHzAcMC8wHDARsC/wH2Af8B9gH/AfYC/wH2Cf8B9gP/AfQB8QH0
        A/8C9gX/AcMBGgH0DP8BwwIZAfEB9APzAfIB8wHyAvQBGQHzAfYB4gG9AfMB9AHzAfIG8wHyAfMBGwH0
        Af8B9AG8AvcBkgHtAewB9wL/AfYF/wF5A3MBHAEaAfQH/wH2ARkCrQGLAoYBiwGGB2YB9AEbAUwERQEk
        AUUBRAFFBUQBGwH/ArwB8AHyAbwBCQG7AuwH/wF5AnoBeQF0AVIBUQFzARwBvAHzBP8B9AHPAbQBuwIJ
        AbsCtQG7A7UBrgFmAvQBTAF0ARoBkwKZAZMBmQSTAW4BRAH0Af8BvAHzAfYB8wHwAbwCtQHtAfIB8AG8
        BP8BeQZ6AXkBWAJRAXMBHAHzAf8B8wHPAQkB9gf/AfMB/wH3AWYB8wHDAUwBmgEaBJoBmQKTAXQBmgGT
        AUQBGwH/AfIB9AHzAfIBvAW1AfcB7AGSAfAC9gFYAXoBmgF6AZoDegLlAXoBeQFzAQcC/wHPAQkB/wK1
        Ad0BvAKuAfEB/wHzAbQBZgHzAfQBbwGaARoBGwMaA5oBdAKTAUQB9AL/AbwBtQEJAbUCzwG1AgcCtQHt
        AewB8wH2AXkEmgLlAZoCegLlAXkBHAH/ARkBtAEJAf8BkQGLAbQBuwGGAaYBtAL0AbQBZgL0AXQBmgEa
        AZoBdAJvAZkBGgGaAZMBmQGTAUQB8wL/AQkBswHUAdUBtAGtAbUBCQEHAbUBrgG1AewB8QH/AXkBmgmg
        AeUBeQFzAf8B9AG0AQkB9AG1As8BtAKtAYsBvAH2AfcBbAHzARsBbwGaARoDdAF1AXQBmgJ0AZkBkwFF
        ARsB9gH/AQkD2gLbAbQBtQEJAbUB7QG1Aa4B8wH2AXkBegWgAeUEoAF5AXMB/wH0AbQBvAH/AbUBtAHP
        AYsCrQGGAe0B/wG1AYYC9AF0ARoBGwGTAZoBdAFMAZMBvQGZAXUBmQGTAUUBGwH2Af8BugTbAtoBtAEJ
        AbUBtAG1Aa4B8QHDAXkBegqgAZoBcwH/AfQBtQEJAf8B1gHPAbQBzwKtAYsBrgH0AbUBhgIbAXQBmgEa
        Ab0BmgFuAUUBvQGaAZMBdAGZAZMBRQHzAfYB9AG0BtsBtAG8AbUBzwG0Aa4B8wEaAXkBmgKgA8MGoAFz
        AfMB9AG1AbwB9AG1AbQBtQG0A88BiwEHAbsBiwHyAfQBkwG9AfMB9AEbAfEBGgHDAhoBmgGZAZMBRQH0
        Af8B8QG1AdwB2wLcAtsBtQG8AbUBzwG1Aa4B8wHDAZkBeQGaAqAGwwKgAXMB8QH/AbUBCQHyArUBCQG1
        ArQBCQGLAZEBtAGLARkB9gF0AZoBGgG9AZoBkwGUAZMCdAF1AZoBlAFFAfQB/wHwAbsB3AThAdwBtQG8
        AbUDrgH0AcMDmgGZAXkBmgPDAfYDwwEcAQcBGQHWAgkDtQEJArQBCQHPAZEBrgGtARkB9AGZARoB9AEb
        AcMBGwMaAZoBlAGaAZQBRQHzAf8BvAG1AgkBGQLiAdwBCQLzAQkBtQHsAfMBGwGaBKABmgGZApoBGgLD
        AaABmQEHAfQBtQHwBPQE/wL0AbUBiwHzAf8BmQEaAfMCGgO9AZoBvQGaARoBkwFFAfQB/wHxAQcB7wH3
        Ae8DuwG1AbwB8AHzAfQB8wH/AfMBmgSgAZoBnwGaA5kCeQGZARoB9AG1AQcB8AEZAfEBvAHwAbwB3QIJ
        ARkBtAGLAfMB9AKaBBoBmgEaBJoBdAFFAfMB9gP/AfMB8AEHAbsB7QG8Bf8B9gH/ARoBmQEaAaABmgGZ
        ARoBwwMaApkBGwH/AfQB1gW1BLQCzwKtAfMB9gKaAZkBlAF1AZQCdQF0AW8ETAEbAfYM/wH2Af8B9gH/
        AcMEGgEbBv8B9gL/AfYG9AHzAvQB8wH/AvQBGQH2Af8B9AH2Af8B9AH2Af8C9AHzAvQB8wH/AfMB9AFC
        AU0BPgcAAT4DAAEoAwABQAMAATADAAEBAQABAQUAAYABARYAA///AIIACw==
</value>
  </data>
</root>